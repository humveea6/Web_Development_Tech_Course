<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webdevelope.summoned.task.mappers.SummonedRequestInfoMapper">
  <resultMap id="BaseResultMap" type="com.webdevelope.summoned.task.model.SummonedRequestInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="summoned_id" jdbcType="BIGINT" property="summonedId" />
    <result column="request_user_id" jdbcType="BIGINT" property="requestUserId" />
    <result column="request_desc" jdbcType="VARCHAR" property="requestDesc" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, summoned_id, request_user_id, request_desc, create_time, update_time, status
  </sql>
  <select id="selectByExample" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from summoned_request_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from summoned_request_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from summoned_request_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfoExample">
    delete from summoned_request_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfo">
    insert into summoned_request_info (id, summoned_id, request_user_id, 
      request_desc, create_time, update_time, 
      status)
    values (#{id,jdbcType=BIGINT}, #{summonedId,jdbcType=BIGINT}, #{requestUserId,jdbcType=BIGINT}, 
      #{requestDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfo">
    insert into summoned_request_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="summonedId != null">
        summoned_id,
      </if>
      <if test="requestUserId != null">
        request_user_id,
      </if>
      <if test="requestDesc != null">
        request_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="summonedId != null">
        #{summonedId,jdbcType=BIGINT},
      </if>
      <if test="requestUserId != null">
        #{requestUserId,jdbcType=BIGINT},
      </if>
      <if test="requestDesc != null">
        #{requestDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfoExample" resultType="java.lang.Long">
    select count(*) from summoned_request_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update summoned_request_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.summonedId != null">
        summoned_id = #{record.summonedId,jdbcType=BIGINT},
      </if>
      <if test="record.requestUserId != null">
        request_user_id = #{record.requestUserId,jdbcType=BIGINT},
      </if>
      <if test="record.requestDesc != null">
        request_desc = #{record.requestDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update summoned_request_info
    set id = #{record.id,jdbcType=BIGINT},
      summoned_id = #{record.summonedId,jdbcType=BIGINT},
      request_user_id = #{record.requestUserId,jdbcType=BIGINT},
      request_desc = #{record.requestDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfo">
    update summoned_request_info
    <set>
      <if test="summonedId != null">
        summoned_id = #{summonedId,jdbcType=BIGINT},
      </if>
      <if test="requestUserId != null">
        request_user_id = #{requestUserId,jdbcType=BIGINT},
      </if>
      <if test="requestDesc != null">
        request_desc = #{requestDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webdevelope.summoned.task.model.SummonedRequestInfo">
    update summoned_request_info
    set summoned_id = #{summonedId,jdbcType=BIGINT},
      request_user_id = #{requestUserId,jdbcType=BIGINT},
      request_desc = #{requestDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>